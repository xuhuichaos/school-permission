{"version":3,"file":"js/580.2ffb7b4a.js","mappings":"qLACOA,MAAM,S,GAcJA,MAAM,c,GACJA,MAAM,mB,iMAffC,EAAAA,EAAAA,IAoCM,MApCNC,EAoCM,EAtBJC,EAAAA,EAAAA,GAqBM,MArBNC,EAqBM,EApBJD,EAAAA,EAAAA,GAIM,MAJNE,EAIM,EAHJC,EAAAA,EAAAA,IAEUC,EAAA,CAFAC,KAAM,KAAG,C,kBACjB,IAAgB,EAAhBF,EAAAA,EAAAA,IAAgBG,M,SAIpBH,EAAAA,EAAAA,IAaUI,EAAA,CAbDC,IAAI,cAAeC,MAAOC,EAAAC,SAAU,iBAAaC,MAAOF,EAAAE,MAAOf,MAAM,kB,mBAC5E,IAEe,EAFfM,EAAAA,EAAAA,IAEeU,EAAA,CAFDC,KAAK,SAAO,C,kBACxB,IAAsG,EAAtGX,EAAAA,EAAAA,IAAsGY,EAAA,C,WAAnFL,EAAAC,SAASK,M,qCAATN,EAAAC,SAASK,MAAKC,GAAEC,aAAa,MAAMC,YAAY,YAAY,cAAY,W,iCAE5FhB,EAAAA,EAAAA,IAGeU,EAAA,CAHDC,KAAK,YAAU,C,kBAC3B,IACuB,EADvBX,EAAAA,EAAAA,IACuBY,EAAA,C,WADJL,EAAAC,SAASS,S,qCAATV,EAAAC,SAASS,SAAQH,GAAEI,KAAK,WAAWH,aAAa,MAAMC,YAAY,YACnF,cAAY,Q,iCAGhBhB,EAAAA,EAAAA,IAGeU,EAAA,CAHDhB,MAAM,mBAAiB,C,kBACnC,IAA4D,EAA5DM,EAAAA,EAAAA,IAA4DmB,EAAA,CAAjDD,KAAK,UAAWE,QAAOb,EAAAc,U,mBAAU,IAAI,UAAJ,W,qBAC5CrB,EAAAA,EAAAA,IAA+CmB,EAAA,CAAnCC,QAAOb,EAAAe,WAAS,C,kBAAE,IAAK,UAAL,Y,0EAWxC,GAAeC,EAAAA,EAAAA,IAAgB,CAO7BC,OACE,MAAO,CACLC,EAAG,GACHjB,SAAU,CACRK,MAAO,GACPI,SAAU,IAEZR,MAAO,CACLI,MAAO,CACL,CAAEa,UAAU,EAAMC,QAAS,aAAcC,QAAS,QAClD,CAAEV,KAAM,QAASS,QAAS,WAAYC,QAAS,SAEjDX,SAAU,CACR,CAAES,UAAU,EAAMC,QAAS,aAAcC,QAAS,QAClD,CAAEC,IAAK,EAAGF,QAAS,eAAgBC,QAAS,UAIpD,EACAE,UAAY,EACZC,QAAS,CAEPV,WACE,MAAMW,EAAOC,KACPC,EAASF,EAAKG,MAAMC,YAErBF,GACLA,EAAOG,UAAUC,IACf,IAAIA,EAiCF,OADAC,QAAQC,IAAI,kBACL,EAjCE,CAET,MAAMC,EAAMR,KAAKS,MAAMC,KAAK,oBAAqBV,KAAKzB,UAEtDiC,EAAIG,MAAMC,IAeR,GAHAN,QAAQC,IAAIK,EAAOrB,OAGfqB,EAAOrB,KAAKsB,QAMd,OAAO,EANgB,CACvB,MAAMC,EAAWF,EAAOrB,KAAKA,KAAKuB,SAClCR,QAAQC,IAAIO,EAASC,OACrBC,OAAOC,eAAeC,QAAQ,QAASJ,EAASC,OAChDhB,EAAKoB,QAAQC,KAAK,cACpB,CAEA,IAECC,OAAOC,IACNhB,QAAQC,IAAIe,EAAI,GAEtB,CAGA,GAEJ,EACAjC,YACE,MAAMY,EAASD,KAAKE,MAAMC,YAC1BF,EAAOsB,aACT,K,QChHJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://quanxiang/./src/views/Login.vue","webpack://quanxiang/./src/views/Login.vue?240b"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <!-- 登陆页面设计\n        1.表单\n        2.验证（自定义）\n        3.登录实现，效果：loading\n        4 状态信息的保存 （pinia，vuex）,\n        问题刷新会出现状态信息丢失的问题，数据持久化 数据库，\n        本地持久化：持久化插件 //持久化插件 安装cnpm install pinia-plugin-persist\n        5 页面跳转\n        6 reset \n        数据接口：http://api.jqrjq.cn/doc.html\n    -->\n    <!-- <div>数量{{userStore.count}}</div>\n    <button @click=\"userStore.increat\">count++</button> -->\n    <div class=\"login-form\">\n      <div class=\"login-form-logo\">\n        <el-icon :size=\"140\">\n          <ChromeFilled />\n        </el-icon>\n      </div>\n\n      <el-form ref=\"ruleFormRef\" :model=\"userForm\" status-icon :rules=\"rules\" class=\"login-ruleForm\">\n        <el-form-item prop=\"email\">\n          <el-input v-model=\"userForm.email\" autocomplete=\"off\" placeholder=\"请输入你的用户邮箱\" suffix-icon=\"Message\" />\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"userForm.password\" type=\"password\" autocomplete=\"off\" placeholder=\"请输入你的用户密码\"\n            suffix-icon=\"Lock\" />\n        </el-form-item>\n\n        <el-form-item class=\"login-form-btns\">\n          <el-button type=\"primary\" @click=\"btnLogin\">用户登录</el-button>\n          <el-button @click=\"resetForm\">Reset</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n<script>\nimport { defineComponent, ref } from 'vue'\n// import { mapActions, storeToRefs } from \"pinia\";\n// import { userLogin } from \"../../http\";\n// import { useUserStore } from \"../../store/user\";\nexport default defineComponent({\n  // setup() {\n  //     const src = ref('../../src/assets/logo.png');\n  //     return {\n  //         src,\n  //     }\n  // },\n  data() {\n    return {\n      n: 30,\n      userForm: {\n        email: '',\n        password: ''\n      },\n      rules: {\n        email: [\n          { required: true, message: '请输入正确的电子邮箱', trigger: 'blur' },\n          { type: 'email', message: '电子邮箱格式错误', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入正确的用户密码', trigger: 'blur' },\n          { min: 8, message: '密码长度不得小于8个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  mounted() { },\n  methods: {\n    // ...mapActions(useUserStore, ['setToken', 'fillUserinfo']),\n    btnLogin() {\n      const that = this\n      const formEl = that.$refs.ruleFormRef //取ref对象\n      //console.log(formEl);\n      if (!formEl) return\n      formEl.validate((valid) => {\n        if (valid) {\n          // const res = userLogin(that.userForm)\n          const res = this.$http.post('api/mobile/elogin', this.userForm)\n\n          res.then((result) => {\n            /**\n             * 选项式\n             * 用户的状态：登陆状态  token='',未登录，token='adbdfsdfsdfdsfds',已经登录\n             * setToken\n             *  保存登录用户的信息\n             * fillUserinfo\n             * 调用状态存储pinia的辅助函数 mapActions\n             * methods:{\n             * ...mapActions(useUserStore, ['setToken', 'fillUserinfo']),\n             * }\n             * */\n            console.log(result.data);\n            // pinia 下次解决\n            // 跳转页面\n            if (result.data.success) {\n              const userinfo = result.data.data.userinfo\n              console.log(userinfo.token);\n              window.sessionStorage.setItem('token', userinfo.token)\n              that.$router.push('/home/users')\n            } else {\n              return false\n            }\n          })\n            .catch((err) => {\n              console.log(err)\n            })\n        } else {\n          console.log('error submit!')\n          return false\n        }\n      })\n    },\n    resetForm() {\n      const formEl = this.$refs.ruleFormRef //取ref对象\n      formEl.resetFields()\n    }\n  }\n})\n</script>\n\n<style lang=\"less\" scoped>\nbody,\nhtml {\n  margin: 0;\n}\n\ncanvas {\n  display: block;\n}\n\n.login {\n  height: calc(100vh - 20px);\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-form {\n  width: 300px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: var(--el-box-shadow);\n}\n\n.login-form-logo {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 150px;\n}\n\n.login-form-btns {\n  display: flex;\n}\n\n.login-form-btns .el-button {\n  flex: 1;\n}\n\n.login-ruleForm {\n  margin: 10px;\n}\n</style>","import { render } from \"./Login.vue?vue&type=template&id=0e2f266a&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=0e2f266a&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0e2f266a\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_icon","size","_component_ChromeFilled","_component_el_form","ref","model","_ctx","userForm","rules","_component_el_form_item","prop","_component_el_input","email","$event","autocomplete","placeholder","password","type","_component_el_button","onClick","btnLogin","resetForm","defineComponent","data","n","required","message","trigger","min","mounted","methods","that","this","formEl","$refs","ruleFormRef","validate","valid","console","log","res","$http","post","then","result","success","userinfo","token","window","sessionStorage","setItem","$router","push","catch","err","resetFields","__exports__","render"],"sourceRoot":""}